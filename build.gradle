// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.6.10"
    ext.version_gradle_versions_plugin = "0.42.0"

    repositories {
        mavenCentral()
        mavenLocal()
        google()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'https://jitpack.io'
        }


    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:$version_gradle_versions_plugin"

        //Using a Gradle plugin as a project does not seem to cooperate here.
        // Therefor we are using a published version here.
        //
        // When developing, publish to maven local, then update the version number below
        // This is used in the 'app' module to run a test.
        classpath "com.github.UstadMobile.AdbScreenRecorder:lib-gradle-plugin:0.1-alpha11"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

version = "0.1-alpha12"
group = "com.ustadmobile.adbscreenrecorder"

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
        google()
    }

    apply plugin: com.github.benmanes.gradle.versions.VersionsPlugin

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    version_androidx_core = '1.7.0'
    version_androidx_appcompat = "1.4.1"
    version_android_constraint_layout = "2.1.3"
    version_android_espresso = "3.4.0"
    version_nanohttpd = "2.3.1"
    version_junit = "4.13.2"
    version_android_junit_runner = "1.4.0"
    version_androidx_test_ext_junit = "1.1.3"  //see https://mvnrepository.com/artifact/androidx.test.ext/junit
    version_gson = "2.8.9"
    version_thumbnailator = "0.4.16"
    version_kotlinx_html = "0.7.3"
    version_android_maven_publish = "3.6.2"
}

ext.buildConfigProperties = new Properties()
ext.buildConfigProperties.load(new FileInputStream(project.file("buildconfig.default.properties")))
if(project.file("buildconfig.local.properties").exists()) {
    ext.buildConfigProperties.load(new FileInputStream(project.file("buildconfig.local.properties")))
}
